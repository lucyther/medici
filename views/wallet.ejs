<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://cdn.jsdelivr.net/npm/web3@1.2.6/dist/web3.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js" integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6" crossorigin="anonymous"></script>
    <script src="https://kit.fontawesome.com/84903da61a.js" crossorigin="anonymous"></script>


    <script src="https://cdn.jsdelivr.net/npm/web3@1.2.6/dist/web3.min.js"></script>
    <script
        src="https://cdn.jsdelivr.net/npm/@portis/web3@2.0.0-beta.54/umd/index.js"
        integrity="sha256-pPwrJF/X2v9erIHBoY3ZWb4P/cRx3j3/zyvQvycabs0="
        crossorigin="anonymous">
    </script>
    <script src="https://verify.sendwyre.com/js/verify-module-init-beta.js"></script>

    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
    <link href="/css/style.css" rel="stylesheet" type="text/css">
    <title>Wallet</title>
</head>
<body>

    <div class="container">

        <div class="card body-card shadow1">
            <section id="info">

                <h1 class="display-4 font-weight-light"><span class="underline--magical-yellow-thick">Medici</span> </h1>
                <h2 class="font-weight-lighter">The fastest way to earn interest.</h2>
                <button class="btn btn-hover color-5 font-weight-light" id="walletButton" style="margin-bottom: 1em"><i class="fas fa-wallet"></i> </button>
                <br>
                <span class="badge badge-dark" id='wyreBtn'>Add funds with a debit card</span>
                <h4 class="font-weight-lighter">Total Wallet Balance</h4>
                <p class="font-weight" id="walletBalance"></p>

                <!-- ETH SUPPLY -->

                <div class="supply-summary">
                   
                    <div class="card-columns d-flex justify-content-center">
                        <div class="card supply-card shadow-sm">
                        <div class="card-block">
                            <h4 class="card-title font-weight-lighter"><i class="fab fa-ethereum"></i> ETH Supplied</h4>
                            <p id="underlyingEth" class="card-text font-weight-lighter"></p>
                        </div>
                        </div>
                        <div class="card supply-card shadow-sm">
                        <div class="card-block">
                            <h4 class="card-title font-weight-lighter"><i class="fas fa-coins"></i> cTokens</h4>
                            <p class="font-weight-lighter card-text" id="cTokens"></p>
                            <p id="exchangeRate">Exchange rate: </p>
                            <p class="small">cTokens represent your balance in the Compound protocol, and accrue interest over time.</p>
                        </div>
                        </div>
                    </div>

                </div>

                <h4 class="font-weight-lighter">Portfolio value</h4>

                <p id="currentValue"></p>
                
            </section>
        </div>

        <div class="card body-card shadow1">
            <h3 class="display-5 font-weight-lighter"><span class="underline--magical-yellow-thick">Supply or Redeem</span> </h3>
            <!-- SUPPLY OR REDEEM -->
            <span id="spinner" style="display: none;"><i class="fas fa-spinner fa-spin"></i></span>
            <p id="statusMessage"></p>

            <section id="supplyOrRedeem">
                <h5 class="font-weight-light">Supply ETH to start earning interest</h5>
                <form action="" id="supplyForm">
                    <input type="text" id="amountToSupply">
                    <input type="submit" class="btn btn-hover color-5 font-weight-light" id="supplyBtn" style="padding-top: .7rem;" value="SUPPLY">
                </form>


                <h5 class="font-weight-light">Redeem ETH from cETH</h5>
                <p id="cEthAvailable">cETH available: </p>
                <form action="" id="redeemForm">
                    <input type="text" id="amountToRedeem">
                    <input type="submit" class="btn btn-hover color-8 font-weight-light" id="redeemBtn" style="padding-top: .7rem;" value="REDEEM">
                </form>

                <!-- <a class="btn btn-hover color-8 font-weight-light" id="redeemBtn" style="padding-top: .7rem; color: white">REDEEM</a> -->
                <p id="cTokenToEth"></p>
            </section>

        </div>
    </div>

    <script>
        const portis = new Portis('755ede7a-9432-44b1-bf4d-01af428d7542', 'rinkeby');
        const web3 = new Web3(portis.provider);

        // Compound's Rinkeby contract for cETH
        const cEthContractAddress = '0xd6801a1dffcd0a410336ef88def4320d6df1883e';
        const cEthAbiJson = [{"constant":true,"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x06fdde03"},{"constant":false,"inputs":[{"name":"spender","type":"address"},{"name":"amount","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0x095ea7b3"},{"constant":false,"inputs":[],"name":"mint","outputs":[],"payable":true,"stateMutability":"payable","type":"function","signature":"0x1249c58b"},{"constant":true,"inputs":[],"name":"reserveFactorMantissa","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x173b9904"},{"constant":false,"inputs":[{"name":"account","type":"address"}],"name":"borrowBalanceCurrent","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0x17bfdfbc"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x18160ddd"},{"constant":true,"inputs":[],"name":"exchangeRateStored","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x182df0f5"},{"constant":false,"inputs":[{"name":"src","type":"address"},{"name":"dst","type":"address"},{"name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0x23b872dd"},{"constant":true,"inputs":[],"name":"pendingAdmin","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x26782247"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x313ce567"},{"constant":false,"inputs":[{"name":"owner","type":"address"}],"name":"balanceOfUnderlying","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0x3af9e669"},{"constant":true,"inputs":[],"name":"getCash","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x3b1d21a2"},{"constant":false,"inputs":[{"name":"newComptroller","type":"address"}],"name":"_setComptroller","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0x4576b5db"},{"constant":true,"inputs":[],"name":"totalBorrows","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x47bd3718"},{"constant":false,"inputs":[],"name":"repayBorrow","outputs":[],"payable":true,"stateMutability":"payable","type":"function","signature":"0x4e4d9fea"},{"constant":true,"inputs":[],"name":"comptroller","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x5fe3b567"},{"constant":false,"inputs":[{"name":"reduceAmount","type":"uint256"}],"name":"_reduceReserves","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0x601a0bf1"},{"constant":true,"inputs":[],"name":"initialExchangeRateMantissa","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x675d972c"},{"constant":true,"inputs":[],"name":"accrualBlockNumber","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x6c540baf"},{"constant":true,"inputs":[{"name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x70a08231"},{"constant":false,"inputs":[],"name":"totalBorrowsCurrent","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0x73acee98"},{"constant":false,"inputs":[{"name":"redeemAmount","type":"uint256"}],"name":"redeemUnderlying","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0x852a12e3"},{"constant":true,"inputs":[],"name":"totalReserves","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x8f840ddd"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x95d89b41"},{"constant":true,"inputs":[{"name":"account","type":"address"}],"name":"borrowBalanceStored","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x95dd9193"},{"constant":false,"inputs":[],"name":"accrueInterest","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0xa6afed95"},{"constant":false,"inputs":[{"name":"dst","type":"address"},{"name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0xa9059cbb"},{"constant":true,"inputs":[],"name":"borrowIndex","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0xaa5af0fd"},{"constant":false,"inputs":[{"name":"borrower","type":"address"},{"name":"cTokenCollateral","type":"address"}],"name":"liquidateBorrow","outputs":[],"payable":true,"stateMutability":"payable","type":"function","signature":"0xaae40a2a"},{"constant":true,"inputs":[],"name":"supplyRatePerBlock","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0xae9d70b0"},{"constant":false,"inputs":[{"name":"liquidator","type":"address"},{"name":"borrower","type":"address"},{"name":"seizeTokens","type":"uint256"}],"name":"seize","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0xb2a02ff1"},{"constant":false,"inputs":[{"name":"newPendingAdmin","type":"address"}],"name":"_setPendingAdmin","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0xb71d1a0c"},{"constant":false,"inputs":[],"name":"exchangeRateCurrent","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0xbd6d894d"},{"constant":true,"inputs":[{"name":"account","type":"address"}],"name":"getAccountSnapshot","outputs":[{"name":"","type":"uint256"},{"name":"","type":"uint256"},{"name":"","type":"uint256"},{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0xc37f68e2"},{"constant":false,"inputs":[{"name":"borrowAmount","type":"uint256"}],"name":"borrow","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0xc5ebeaec"},{"constant":false,"inputs":[{"name":"redeemTokens","type":"uint256"}],"name":"redeem","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0xdb006a75"},{"constant":true,"inputs":[{"name":"owner","type":"address"},{"name":"spender","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0xdd62ed3e"},{"constant":false,"inputs":[{"name":"borrower","type":"address"}],"name":"repayBorrowBehalf","outputs":[],"payable":true,"stateMutability":"payable","type":"function","signature":"0xe5974619"},{"constant":false,"inputs":[],"name":"_acceptAdmin","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0xe9c714f2"},{"constant":false,"inputs":[{"name":"newInterestRateModel","type":"address"}],"name":"_setInterestRateModel","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0xf2b3abbd"},{"constant":true,"inputs":[],"name":"interestRateModel","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function","signature":"0xf3fdb15a"},{"constant":true,"inputs":[],"name":"admin","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function","signature":"0xf851a440"},{"constant":true,"inputs":[],"name":"borrowRatePerBlock","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0xf8f9da28"},{"constant":false,"inputs":[{"name":"newReserveFactorMantissa","type":"uint256"}],"name":"_setReserveFactor","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0xfca7820b"},{"constant":true,"inputs":[],"name":"isCToken","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function","signature":"0xfe9c44ae"},{"inputs":[{"name":"comptroller_","type":"address"},{"name":"interestRateModel_","type":"address"},{"name":"initialExchangeRateMantissa_","type":"uint256"},{"name":"name_","type":"string"},{"name":"symbol_","type":"string"},{"name":"decimals_","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"constructor","signature":"constructor"},{"payable":true,"stateMutability":"payable","type":"fallback"},{"anonymous":false,"inputs":[{"indexed":false,"name":"interestAccumulated","type":"uint256"},{"indexed":false,"name":"borrowIndex","type":"uint256"},{"indexed":false,"name":"totalBorrows","type":"uint256"}],"name":"AccrueInterest","type":"event","signature":"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9"},{"anonymous":false,"inputs":[{"indexed":false,"name":"minter","type":"address"},{"indexed":false,"name":"mintAmount","type":"uint256"},{"indexed":false,"name":"mintTokens","type":"uint256"}],"name":"Mint","type":"event","signature":"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f"},{"anonymous":false,"inputs":[{"indexed":false,"name":"redeemer","type":"address"},{"indexed":false,"name":"redeemAmount","type":"uint256"},{"indexed":false,"name":"redeemTokens","type":"uint256"}],"name":"Redeem","type":"event","signature":"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929"},{"anonymous":false,"inputs":[{"indexed":false,"name":"borrower","type":"address"},{"indexed":false,"name":"borrowAmount","type":"uint256"},{"indexed":false,"name":"accountBorrows","type":"uint256"},{"indexed":false,"name":"totalBorrows","type":"uint256"}],"name":"Borrow","type":"event","signature":"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80"},{"anonymous":false,"inputs":[{"indexed":false,"name":"payer","type":"address"},{"indexed":false,"name":"borrower","type":"address"},{"indexed":false,"name":"repayAmount","type":"uint256"},{"indexed":false,"name":"accountBorrows","type":"uint256"},{"indexed":false,"name":"totalBorrows","type":"uint256"}],"name":"RepayBorrow","type":"event","signature":"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1"},{"anonymous":false,"inputs":[{"indexed":false,"name":"liquidator","type":"address"},{"indexed":false,"name":"borrower","type":"address"},{"indexed":false,"name":"repayAmount","type":"uint256"},{"indexed":false,"name":"cTokenCollateral","type":"address"},{"indexed":false,"name":"seizeTokens","type":"uint256"}],"name":"LiquidateBorrow","type":"event","signature":"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52"},{"anonymous":false,"inputs":[{"indexed":false,"name":"oldPendingAdmin","type":"address"},{"indexed":false,"name":"newPendingAdmin","type":"address"}],"name":"NewPendingAdmin","type":"event","signature":"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9"},{"anonymous":false,"inputs":[{"indexed":false,"name":"oldAdmin","type":"address"},{"indexed":false,"name":"newAdmin","type":"address"}],"name":"NewAdmin","type":"event","signature":"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc"},{"anonymous":false,"inputs":[{"indexed":false,"name":"oldComptroller","type":"address"},{"indexed":false,"name":"newComptroller","type":"address"}],"name":"NewComptroller","type":"event","signature":"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d"},{"anonymous":false,"inputs":[{"indexed":false,"name":"oldInterestRateModel","type":"address"},{"indexed":false,"name":"newInterestRateModel","type":"address"}],"name":"NewMarketInterestRateModel","type":"event","signature":"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926"},{"anonymous":false,"inputs":[{"indexed":false,"name":"oldReserveFactorMantissa","type":"uint256"},{"indexed":false,"name":"newReserveFactorMantissa","type":"uint256"}],"name":"NewReserveFactor","type":"event","signature":"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460"},{"anonymous":false,"inputs":[{"indexed":false,"name":"admin","type":"address"},{"indexed":false,"name":"reduceAmount","type":"uint256"},{"indexed":false,"name":"newTotalReserves","type":"uint256"}],"name":"ReservesReduced","type":"event","signature":"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e"},{"anonymous":false,"inputs":[{"indexed":false,"name":"error","type":"uint256"},{"indexed":false,"name":"info","type":"uint256"},{"indexed":false,"name":"detail","type":"uint256"}],"name":"Failure","type":"event","signature":"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"amount","type":"uint256"}],"name":"Transfer","type":"event","signature":"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"amount","type":"uint256"}],"name":"Approval","type":"event","signature":"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"}]
        const cEthContract = new web3.eth.Contract(cEthAbiJson, cEthContractAddress);

        var myWalletAddress;
        var cTokenBalance; 
        var suppliedAmount;
        var ethExchangeRate;

        web3.eth.getAccounts().then((accounts) => {
            console.log("[getAccounts] accounts: ", accounts)
            walletButton.innerHTML += accounts[0];
            myWalletAddress = accounts[0]

            // Get the amount of eth in user's wallet
            web3.eth.getBalance(myWalletAddress).then((result) => {
                console.log('eth balance for wallet: ', result)
                const ethBalance = web3.utils.fromWei(result);
                walletBalance.innerHTML = parseFloat(ethBalance).toFixed(4) + " ETH";
            }).catch((error) => {
                console.error('[wallet-balance] error: ', error);
            });

            // Get the amount of ETH supplied by the user
            cEthContract.methods.balanceOfUnderlying(myWalletAddress).call().then((balance) => {
                let balanceOfUnderlying = web3.utils.fromWei(balance).toString();
                suppliedAmount = web3.utils.fromWei(balance)
                console.log("getting amount of ETH supplied to Compound...")
                console.log("underlying eth: ", balanceOfUnderlying);
                underlyingEth.innerHTML = parseFloat(balanceOfUnderlying).toFixed(8) + " ETH";
            }).catch((error) => {
                console.error('[wallet-token-balance] error: ', error);
            });

            
            // Get the wallet's cETH balance
            cEthContract.methods.balanceOf(myWalletAddress).call()
            .then((result) => {
                cTokenBalance = result / 1e8
                console.log("[wallet-ctoken-balance] obtained cToken balance");
                cTokens.innerHTML = cTokenBalance + " cETH";
                cEthAvailable.innerHTML += " " + cTokenBalance + " cETH";

                $.get('https://api.compound.finance/api/v2/ctoken?network=rinkeby', (data, status) => {
                    ethExchangeRate = data.cToken[3].exchange_rate.value;
                    console.log("exchange rate from API: ", ethExchangeRate)
                    console.log("cTokens supplied: ", cTokenBalance)
                    var ethValue = cTokenBalance * ethExchangeRate;
                    console.log("total eth value: ", ethValue);

                    var yield = (ethValue - suppliedAmount) / suppliedAmount;
                    var amountEarned = ethValue - suppliedAmount;

                    currentValue.innerHTML = ethValue.toFixed(4) + " ETH (" + yield.toFixed(3) + "%)" 
                    exchangeRate.innerHTML += "1 cETH = " + parseFloat(ethExchangeRate).toFixed(6) + " ETH"
                })


            }).catch((error) => {
                console.error('[wallet-ctoken-balance] error: ', error);
            })

        }).catch((error) => {
            console.error('[get accounts] error: ', error)
        });
        
        // var supplyButton = document.getElementById('supplyBtn');
        var supplyForm = document.getElementById('supplyForm');

        supplyForm.onsubmit = function(event){
            console.log("supply button clicked!");
            event.preventDefault()
            
            const amount = document.getElementById('amountToSupply').value;
            $('#spinner').show();
            $('#statusMessage').append(`<span>Supplying ` + amount + ` ETH...</span>`)

            // Mint some cETH by supplying ETH to the compound protocol

            cEthContract.methods.mint().send({
                from: myWalletAddress,
                gasLimit: web3.utils.toHex(500000),
                gasPrice: web3.utils.toHex(20000000000),
                value: web3.utils.toHex(web3.utils.toWei(amount, 'ether'))
            }).then((result) => {
                console.log("supplied! result: ", result)
                $('#spinner').hide();
                statusMessage.innerHTML = `💰 Supplied! Transaction hash: ` +  `<a target="_blank" href="https://rinkeby.etherscan.io/tx/` + result.transactionHash + `">` + result.transactionHash + `</a>`
            }).catch((error) => {
                console.error('[supply] error:', error);
                $('#spinner').hide();
                statusMessage.innerHTML = `🚨 Something went wrong. Please try again.`
            });
        }

        // Redeem cETH
        $('#amountToRedeem').on('input', (event) => {
            console.log("input received");
            var input = $('#amountToRedeem').val()
            cTokenToEth.innerHTML = input * ethExchangeRate + " ETH";
        });

        var redeemForm = document.getElementById('redeemForm');
        redeemForm.onsubmit = function(event){
            console.log("redeem button clicked!");
            event.preventDefault();
            console.log("Exchanging all cETH based on underlying ETH amount...");
            

            var amount = $('#amountToRedeem').val();

            $('#spinner').show();
            $('#statusMessage').append("<span>Redeeming " + amount + " cETH for ETH...</span>");

            cEthContract.methods.redeem(Math.floor(amount * 1e8)).send({
                from: myWalletAddress,
                gasLimit: web3.utils.toHex(500000),
                gasPrice: web3.utils.toHex(20000000000),
            }).then((result) => {
                console.log("result from redeeming: ", result)
                $('#spinner').hide();
                statusMessage.innerHTML = `💸 You have redeemed ETH with your cETH! Transaction hash: ` +  `<a target="_blank" href="https://rinkeby.etherscan.io/tx/` + result.transactionHash + `">` + result.transactionHash + `</a>`
            }).catch((error) => {
                console.error('[redeem] error: ', error);
                $('#spinner').hide();
                statusMessage.innerHTML = `🚨 Something went wrong. Please try again.`
            });
        }

        // Open portis wallet
        $('#walletButton').click(() => {
            portis.showPortis();
        })

        // debit card popup
        var widget = new Wyre({
            env: 'test',
            operation: {
                type: 'debitcard-hosted-dialog',
                // dest: "ethereum:" + myWalletAddress,
                destCurrency: "ETH",
                sourceAmount: 10.0,
                paymentMethod: 'debit-card'
            }
        });

        widget.on("exit", function (e) {
            console.log("exit", e);
        })

        widget.on("error", function (e) {
            console.log("error", e);
        })

        widget.on("complete", function (e) {
            console.log("complete", e );
        });

        widget.on('ready', function(e) {
            console.log("ready", e );
            widget.open();
        })

        $('#wyreBtn').click(function(){
            console.log('open')
            widget.open();
        })
        
    </script>

</body>
</html>