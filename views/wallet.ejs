<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://cdn.jsdelivr.net/npm/web3@1.2.6/dist/web3.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js" integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6" crossorigin="anonymous"></script>
    <script src="https://kit.fontawesome.com/84903da61a.js" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
    <link href="/css/style.css" rel="stylesheet" type="text/css">

    <!-- GOOGLE FONTS -->
    <link href="https://fonts.googleapis.com/css2?family=Hind:wght@300;400&display=swap" rel="stylesheet">

    <!-- AOS -->
    <script src="https://unpkg.com/aos@2.3.1/dist/aos.js"></script>
    <link href="https://unpkg.com/aos@2.3.1/dist/aos.css" rel="stylesheet">

    <!-- WEB3 -->
    <script src="https://cdn.jsdelivr.net/npm/web3@1.2.6/dist/web3.min.js"></script>

    <!-- PORTIS -->
    <script
        src="https://cdn.jsdelivr.net/npm/@portis/web3@2.0.0-beta.54/umd/index.js"
        integrity="sha256-pPwrJF/X2v9erIHBoY3ZWb4P/cRx3j3/zyvQvycabs0="
        crossorigin="anonymous">
    </script>

    <title>Medici Wallet</title>
</head>
<body>
    <%- include('partials/nav') %>
    <div class="container">

        <div class="card body-card shadow1">
            <section id="info" data-aos="fade-down" data-aos-delay="300">

                <h1 class="display-4 font-weight-light"><span class="underline--magical-yellow-thick">Medici</span> </h1>
                <p class="small">NOTE: This is a demo wallet running on the <b>Rinkeby</b> test network.</p>
                <h2 class="font-weight-lighter">The fast and simple interest-earning wallet.</h2>
                <button class="btn btn-hover color-5 font-weight-light wallet-btn" id="walletButton" style="margin-bottom: 1em"><i class="fas fa-wallet"></i> </button>
                <br>

                <!-- WYRE -->
                <button class="btn btn-hover color-8 font-weight-light wallet-btn" data-toggle="modal" data-target="#wyreModal" id="wyreBtn" style="margin-bottom: 1em; color: white"><i class="far fa-credit-card"></i> Fund wallet with debit card </button>
                
                <!-- Modal for funding wallet with fiat -->
                <!-- Modal -->
                <div class="modal fade" id="wyreModal" tabindex="-1" role="dialog" aria-labelledby="wyreModalLongTitle" aria-hidden="true">
                    <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                        <h5 class="modal-title" id="wyreModalLongTitle"><i class="far fa-credit-card"></i> Fund your wallet using a debit card</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                        </div>

                        <div class="modal-body">
                            <p>To start earning interest, purchase some DAI or ETH for your wallet.</p>
                            <p>Funds will be transferred to your <span class="gold-text"> Medici Wallet</span>, and you decide how much you want to supply to earn interest.</p>
                            <p>Withdraw anytime.</p>
                            <br>
                            <!-- enter amount -->
                            <p class="gold-text"><b>Amount</b></p>
                            <br>
                            <input type="text" id="amountToFund">
                            <br>

                            <div style="margin-top: 3%">
                                <p class="gold-text"><b>Token type</b></p>
                                <select class="custom-select" id="tokenToBuy" style="margin-bottom: 5%">
                                    <option selected>Select a token</option>
                                    <option value="eth">ETH</option>
                                    <option value="dai">DAI</option>
                                </select>
                            </div>
                            
                            <div id="currencyConverter" style="display: none;">
                                <p>The DAI stablecoin is pegged to the US Dollar. Need help with conversion?</p>
                                                
                                <!-- Currency Converter Script - FxExchangeRate.com  -->
                                <div style="width:248px;height:auto;border:1px solid #ADA368;text-align:center;font-size:16px;font-family:sans-serif,Arial,Helvetica;border-top-right-radius:5px; border-top-left-radius:5px;background-color:#FFFFFF;"><div style="width:100%; height:24px;padding:5px 0px 0px 0px;background-color:#CCB882;font-weight:bold;"><a rel="nofollow" style="color:#FFFFFF;text-decoration:none;" href="https://www.fxexchangerate.com/">Currency Converter</a></div><script type="text/javascript" src="https://w.fxexchangerate.com/converter.php?fm=USD&ft=EUR&lg=en&am=1&ty=1"></script></div>
                                <!--  End of Currency Converter Script -  FxExchangeRate.com -->
    
                            </div>
                        </div>
                        
                        <div class="modal-footer">
                        <button type="button" class="btn btn-light" data-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-dark" id="open-wyre">ðŸ’³ Fund with debit card</button>
                        </div>
                    </div>
                    </div>
                </div>

                
                <h4 class="font-weight-lighter">Wallet Balances</h4>
                <div class="card supply-card shadow-sm">
                    <div class="card-block">
                        <h5 id="walletBalanceEth"></p>

                    </div>
                </div>
                <div class="card supply-card shadow-sm">
                    <div class="card-block">
                        <h5 id="walletBalanceDai"></p>
                    </div>
                </div>
                
                <hr>

                <h4 class="font-weight-lighter">Deposited Balances</h4>
                <p class="small">cTokens represent your balance in the <span class="gold-text">Compound protocol</span>, and accrue interest over time.</p>
                <!-- DAI SUPPLY -->
                <table class="table">
                    <thead>
                      <tr>
                        <th scope="col">â—ˆ DAI</th>
                        <th scope="col"><i class="fas fa-coins"></i> cDAI</th>
                      </tr>
                    </thead>
                    <tbody>
                      <tr>
                        <td id="underlyingDai"></td>
                        <td id="cTokensDai"></td>
                      </tr>
                    </tbody>
                  </table>

                  <p id="exchangeRateDai"></p>
                  <br>
                 
                <!-- ETH SUPPLY -->
                <table class="table">
                    <thead>
                      <tr>
                        <th scope="col"><i class="fab fa-ethereum"></i> ETH</th>
                        <th scope="col"><i class="fas fa-coins"></i> cETH</th>
                      </tr>
                    </thead>
                    <tbody>
                      <tr>
                        <td id="underlyingEth"></td>
                        <td id="cTokensEth"></td>
                      </tr>
                    </tbody>
                  </table>
                  <p id="exchangeRateEth"></p>


                <!-- <div class="supply-summary">
                   
                    <div class="card-columns d-flex justify-content-center">
                        <div class="card supply-card shadow-sm">
                        <div class="card-block">
                            <h4 class="card-title font-weight-lighter"><i class="fab fa-ethereum"></i> Deposited Balance</h4>
                        </div>
                        </div>
                        <div class="card supply-card shadow-sm">
                        <div class="card-block">
                            <h4 class="card-title font-weight-lighter"><i class="fas fa-coins"></i> cTokens</h4>
                        </div>
                        </div>
                    </div>

                </div> -->

            </section>
        </div>

        <div class="card body-card shadow1" data-aos="fade-up" data-aos-delay="300">
            <h3 class="display-5 font-weight-lighter"><span class="underline--magical-yellow-thick">Supply or Redeem</span> </h3>
            <!-- SUPPLY OR REDEEM -->

            <select class="custom-select" id="token-select" style="margin-bottom: 5%">
                <option selected>Select a token</option>
                <option value="eth">ETH</option>
                <option value="dai">DAI</option>
              </select>


            <span id="spinner" style="display: none;"><i class="fas fa-spinner fa-spin"></i></span>
            <p id="statusMessage"></p>            

            <section id="supplyOrRedeem">
                <h5 class="font-weight-light"><i class="fas fa-piggy-bank"></i> Supply tokens to start earning interest</h5>

                <div id="supplyRateInfo">
                </div>

                <form action="" id="supplyForm" style="margin-top: 5%;">
                    <input type="text" id="amountToSupply">
                    <input type="submit" class="btn btn-hover color-5 font-weight-light" id="supplyBtn" style="padding-top: .7rem;" value="SUPPLY">
                </form>

                <form action="" id="redeemForm" style="margin-top: 5%;">
                    <h5 class="font-weight-light"><i class="fas fa-hand-holding-usd"></i> Redeem tokens from cTokens</h5>

                    <div id="cTokensAvailable"></div>

                    <input type="text" id="amountToRedeem">
                    <input type="submit" class="btn btn-hover color-8 font-weight-light" id="redeemBtn" style="padding-top: .7rem;" value="REDEEM">
                </form>

                <p id="cTokenToEth"></p>
                <p id="cTokenToDai"></p>
            </section>

        </div>
    </div>

    <script>
        const portis = new Portis('755ede7a-9432-44b1-bf4d-01af428d7542', 'rinkeby');
        const web3 = new Web3(portis.provider);
        AOS.init();

        // Compound's Rinkeby contract for cETH
        const cEthContractAddress = '0xd6801a1dffcd0a410336ef88def4320d6df1883e';
        const cEthAbiJson = [{"constant":true,"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x06fdde03"},{"constant":false,"inputs":[{"name":"spender","type":"address"},{"name":"amount","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0x095ea7b3"},{"constant":false,"inputs":[],"name":"mint","outputs":[],"payable":true,"stateMutability":"payable","type":"function","signature":"0x1249c58b"},{"constant":true,"inputs":[],"name":"reserveFactorMantissa","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x173b9904"},{"constant":false,"inputs":[{"name":"account","type":"address"}],"name":"borrowBalanceCurrent","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0x17bfdfbc"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x18160ddd"},{"constant":true,"inputs":[],"name":"exchangeRateStored","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x182df0f5"},{"constant":false,"inputs":[{"name":"src","type":"address"},{"name":"dst","type":"address"},{"name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0x23b872dd"},{"constant":true,"inputs":[],"name":"pendingAdmin","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x26782247"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x313ce567"},{"constant":false,"inputs":[{"name":"owner","type":"address"}],"name":"balanceOfUnderlying","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0x3af9e669"},{"constant":true,"inputs":[],"name":"getCash","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x3b1d21a2"},{"constant":false,"inputs":[{"name":"newComptroller","type":"address"}],"name":"_setComptroller","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0x4576b5db"},{"constant":true,"inputs":[],"name":"totalBorrows","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x47bd3718"},{"constant":false,"inputs":[],"name":"repayBorrow","outputs":[],"payable":true,"stateMutability":"payable","type":"function","signature":"0x4e4d9fea"},{"constant":true,"inputs":[],"name":"comptroller","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x5fe3b567"},{"constant":false,"inputs":[{"name":"reduceAmount","type":"uint256"}],"name":"_reduceReserves","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0x601a0bf1"},{"constant":true,"inputs":[],"name":"initialExchangeRateMantissa","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x675d972c"},{"constant":true,"inputs":[],"name":"accrualBlockNumber","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x6c540baf"},{"constant":true,"inputs":[{"name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x70a08231"},{"constant":false,"inputs":[],"name":"totalBorrowsCurrent","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0x73acee98"},{"constant":false,"inputs":[{"name":"redeemAmount","type":"uint256"}],"name":"redeemUnderlying","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0x852a12e3"},{"constant":true,"inputs":[],"name":"totalReserves","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x8f840ddd"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x95d89b41"},{"constant":true,"inputs":[{"name":"account","type":"address"}],"name":"borrowBalanceStored","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x95dd9193"},{"constant":false,"inputs":[],"name":"accrueInterest","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0xa6afed95"},{"constant":false,"inputs":[{"name":"dst","type":"address"},{"name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0xa9059cbb"},{"constant":true,"inputs":[],"name":"borrowIndex","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0xaa5af0fd"},{"constant":false,"inputs":[{"name":"borrower","type":"address"},{"name":"cTokenCollateral","type":"address"}],"name":"liquidateBorrow","outputs":[],"payable":true,"stateMutability":"payable","type":"function","signature":"0xaae40a2a"},{"constant":true,"inputs":[],"name":"supplyRatePerBlock","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0xae9d70b0"},{"constant":false,"inputs":[{"name":"liquidator","type":"address"},{"name":"borrower","type":"address"},{"name":"seizeTokens","type":"uint256"}],"name":"seize","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0xb2a02ff1"},{"constant":false,"inputs":[{"name":"newPendingAdmin","type":"address"}],"name":"_setPendingAdmin","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0xb71d1a0c"},{"constant":false,"inputs":[],"name":"exchangeRateCurrent","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0xbd6d894d"},{"constant":true,"inputs":[{"name":"account","type":"address"}],"name":"getAccountSnapshot","outputs":[{"name":"","type":"uint256"},{"name":"","type":"uint256"},{"name":"","type":"uint256"},{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0xc37f68e2"},{"constant":false,"inputs":[{"name":"borrowAmount","type":"uint256"}],"name":"borrow","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0xc5ebeaec"},{"constant":false,"inputs":[{"name":"redeemTokens","type":"uint256"}],"name":"redeem","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0xdb006a75"},{"constant":true,"inputs":[{"name":"owner","type":"address"},{"name":"spender","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0xdd62ed3e"},{"constant":false,"inputs":[{"name":"borrower","type":"address"}],"name":"repayBorrowBehalf","outputs":[],"payable":true,"stateMutability":"payable","type":"function","signature":"0xe5974619"},{"constant":false,"inputs":[],"name":"_acceptAdmin","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0xe9c714f2"},{"constant":false,"inputs":[{"name":"newInterestRateModel","type":"address"}],"name":"_setInterestRateModel","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0xf2b3abbd"},{"constant":true,"inputs":[],"name":"interestRateModel","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function","signature":"0xf3fdb15a"},{"constant":true,"inputs":[],"name":"admin","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function","signature":"0xf851a440"},{"constant":true,"inputs":[],"name":"borrowRatePerBlock","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0xf8f9da28"},{"constant":false,"inputs":[{"name":"newReserveFactorMantissa","type":"uint256"}],"name":"_setReserveFactor","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0xfca7820b"},{"constant":true,"inputs":[],"name":"isCToken","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function","signature":"0xfe9c44ae"},{"inputs":[{"name":"comptroller_","type":"address"},{"name":"interestRateModel_","type":"address"},{"name":"initialExchangeRateMantissa_","type":"uint256"},{"name":"name_","type":"string"},{"name":"symbol_","type":"string"},{"name":"decimals_","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"constructor","signature":"constructor"},{"payable":true,"stateMutability":"payable","type":"fallback"},{"anonymous":false,"inputs":[{"indexed":false,"name":"interestAccumulated","type":"uint256"},{"indexed":false,"name":"borrowIndex","type":"uint256"},{"indexed":false,"name":"totalBorrows","type":"uint256"}],"name":"AccrueInterest","type":"event","signature":"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9"},{"anonymous":false,"inputs":[{"indexed":false,"name":"minter","type":"address"},{"indexed":false,"name":"mintAmount","type":"uint256"},{"indexed":false,"name":"mintTokens","type":"uint256"}],"name":"Mint","type":"event","signature":"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f"},{"anonymous":false,"inputs":[{"indexed":false,"name":"redeemer","type":"address"},{"indexed":false,"name":"redeemAmount","type":"uint256"},{"indexed":false,"name":"redeemTokens","type":"uint256"}],"name":"Redeem","type":"event","signature":"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929"},{"anonymous":false,"inputs":[{"indexed":false,"name":"borrower","type":"address"},{"indexed":false,"name":"borrowAmount","type":"uint256"},{"indexed":false,"name":"accountBorrows","type":"uint256"},{"indexed":false,"name":"totalBorrows","type":"uint256"}],"name":"Borrow","type":"event","signature":"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80"},{"anonymous":false,"inputs":[{"indexed":false,"name":"payer","type":"address"},{"indexed":false,"name":"borrower","type":"address"},{"indexed":false,"name":"repayAmount","type":"uint256"},{"indexed":false,"name":"accountBorrows","type":"uint256"},{"indexed":false,"name":"totalBorrows","type":"uint256"}],"name":"RepayBorrow","type":"event","signature":"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1"},{"anonymous":false,"inputs":[{"indexed":false,"name":"liquidator","type":"address"},{"indexed":false,"name":"borrower","type":"address"},{"indexed":false,"name":"repayAmount","type":"uint256"},{"indexed":false,"name":"cTokenCollateral","type":"address"},{"indexed":false,"name":"seizeTokens","type":"uint256"}],"name":"LiquidateBorrow","type":"event","signature":"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52"},{"anonymous":false,"inputs":[{"indexed":false,"name":"oldPendingAdmin","type":"address"},{"indexed":false,"name":"newPendingAdmin","type":"address"}],"name":"NewPendingAdmin","type":"event","signature":"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9"},{"anonymous":false,"inputs":[{"indexed":false,"name":"oldAdmin","type":"address"},{"indexed":false,"name":"newAdmin","type":"address"}],"name":"NewAdmin","type":"event","signature":"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc"},{"anonymous":false,"inputs":[{"indexed":false,"name":"oldComptroller","type":"address"},{"indexed":false,"name":"newComptroller","type":"address"}],"name":"NewComptroller","type":"event","signature":"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d"},{"anonymous":false,"inputs":[{"indexed":false,"name":"oldInterestRateModel","type":"address"},{"indexed":false,"name":"newInterestRateModel","type":"address"}],"name":"NewMarketInterestRateModel","type":"event","signature":"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926"},{"anonymous":false,"inputs":[{"indexed":false,"name":"oldReserveFactorMantissa","type":"uint256"},{"indexed":false,"name":"newReserveFactorMantissa","type":"uint256"}],"name":"NewReserveFactor","type":"event","signature":"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460"},{"anonymous":false,"inputs":[{"indexed":false,"name":"admin","type":"address"},{"indexed":false,"name":"reduceAmount","type":"uint256"},{"indexed":false,"name":"newTotalReserves","type":"uint256"}],"name":"ReservesReduced","type":"event","signature":"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e"},{"anonymous":false,"inputs":[{"indexed":false,"name":"error","type":"uint256"},{"indexed":false,"name":"info","type":"uint256"},{"indexed":false,"name":"detail","type":"uint256"}],"name":"Failure","type":"event","signature":"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"amount","type":"uint256"}],"name":"Transfer","type":"event","signature":"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"amount","type":"uint256"}],"name":"Approval","type":"event","signature":"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"}]
        const cEthContract = new web3.eth.Contract(cEthAbiJson, cEthContractAddress);

        // Compound's Rinkeby contract for cDAI
        const cDaiContractAddress = '0x6d7f0754ffeb405d23c51ce938289d4835be3b14';
        const cDaiAbiJson = [{"constant":true,"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x06fdde03"},{"constant":false,"inputs":[{"name":"spender","type":"address"},{"name":"amount","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0x095ea7b3"},{"constant":false,"inputs":[{"name":"repayAmount","type":"uint256"}],"name":"repayBorrow","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0x0e752702"},{"constant":true,"inputs":[],"name":"reserveFactorMantissa","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x173b9904"},{"constant":false,"inputs":[{"name":"account","type":"address"}],"name":"borrowBalanceCurrent","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0x17bfdfbc"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x18160ddd"},{"constant":true,"inputs":[],"name":"exchangeRateStored","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x182df0f5"},{"constant":false,"inputs":[{"name":"src","type":"address"},{"name":"dst","type":"address"},{"name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0x23b872dd"},{"constant":false,"inputs":[{"name":"borrower","type":"address"},{"name":"repayAmount","type":"uint256"}],"name":"repayBorrowBehalf","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0x2608f818"},{"constant":true,"inputs":[],"name":"pendingAdmin","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x26782247"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x313ce567"},{"constant":false,"inputs":[{"name":"owner","type":"address"}],"name":"balanceOfUnderlying","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0x3af9e669"},{"constant":true,"inputs":[],"name":"getCash","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x3b1d21a2"},{"constant":false,"inputs":[{"name":"newComptroller","type":"address"}],"name":"_setComptroller","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0x4576b5db"},{"constant":true,"inputs":[],"name":"totalBorrows","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x47bd3718"},{"constant":true,"inputs":[],"name":"comptroller","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x5fe3b567"},{"constant":false,"inputs":[{"name":"reduceAmount","type":"uint256"}],"name":"_reduceReserves","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0x601a0bf1"},{"constant":true,"inputs":[],"name":"initialExchangeRateMantissa","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x675d972c"},{"constant":true,"inputs":[],"name":"accrualBlockNumber","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x6c540baf"},{"constant":true,"inputs":[],"name":"underlying","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x6f307dc3"},{"constant":true,"inputs":[{"name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x70a08231"},{"constant":false,"inputs":[],"name":"totalBorrowsCurrent","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0x73acee98"},{"constant":false,"inputs":[{"name":"redeemAmount","type":"uint256"}],"name":"redeemUnderlying","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0x852a12e3"},{"constant":true,"inputs":[],"name":"totalReserves","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x8f840ddd"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x95d89b41"},{"constant":true,"inputs":[{"name":"account","type":"address"}],"name":"borrowBalanceStored","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0x95dd9193"},{"constant":false,"inputs":[{"name":"mintAmount","type":"uint256"}],"name":"mint","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0xa0712d68"},{"constant":false,"inputs":[],"name":"accrueInterest","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0xa6afed95"},{"constant":false,"inputs":[{"name":"dst","type":"address"},{"name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0xa9059cbb"},{"constant":true,"inputs":[],"name":"borrowIndex","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0xaa5af0fd"},{"constant":true,"inputs":[],"name":"supplyRatePerBlock","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0xae9d70b0"},{"constant":false,"inputs":[{"name":"liquidator","type":"address"},{"name":"borrower","type":"address"},{"name":"seizeTokens","type":"uint256"}],"name":"seize","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0xb2a02ff1"},{"constant":false,"inputs":[{"name":"newPendingAdmin","type":"address"}],"name":"_setPendingAdmin","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0xb71d1a0c"},{"constant":false,"inputs":[],"name":"exchangeRateCurrent","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0xbd6d894d"},{"constant":true,"inputs":[{"name":"account","type":"address"}],"name":"getAccountSnapshot","outputs":[{"name":"","type":"uint256"},{"name":"","type":"uint256"},{"name":"","type":"uint256"},{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0xc37f68e2"},{"constant":false,"inputs":[{"name":"borrowAmount","type":"uint256"}],"name":"borrow","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0xc5ebeaec"},{"constant":false,"inputs":[{"name":"redeemTokens","type":"uint256"}],"name":"redeem","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0xdb006a75"},{"constant":true,"inputs":[{"name":"owner","type":"address"},{"name":"spender","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0xdd62ed3e"},{"constant":false,"inputs":[],"name":"_acceptAdmin","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0xe9c714f2"},{"constant":false,"inputs":[{"name":"newInterestRateModel","type":"address"}],"name":"_setInterestRateModel","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0xf2b3abbd"},{"constant":true,"inputs":[],"name":"interestRateModel","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function","signature":"0xf3fdb15a"},{"constant":false,"inputs":[{"name":"borrower","type":"address"},{"name":"repayAmount","type":"uint256"},{"name":"cTokenCollateral","type":"address"}],"name":"liquidateBorrow","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0xf5e3c462"},{"constant":true,"inputs":[],"name":"admin","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function","signature":"0xf851a440"},{"constant":true,"inputs":[],"name":"borrowRatePerBlock","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","signature":"0xf8f9da28"},{"constant":false,"inputs":[{"name":"newReserveFactorMantissa","type":"uint256"}],"name":"_setReserveFactor","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"0xfca7820b"},{"constant":true,"inputs":[],"name":"isCToken","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function","signature":"0xfe9c44ae"},{"inputs":[{"name":"underlying_","type":"address"},{"name":"comptroller_","type":"address"},{"name":"interestRateModel_","type":"address"},{"name":"initialExchangeRateMantissa_","type":"uint256"},{"name":"name_","type":"string"},{"name":"symbol_","type":"string"},{"name":"decimals_","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"constructor","signature":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"interestAccumulated","type":"uint256"},{"indexed":false,"name":"borrowIndex","type":"uint256"},{"indexed":false,"name":"totalBorrows","type":"uint256"}],"name":"AccrueInterest","type":"event","signature":"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9"},{"anonymous":false,"inputs":[{"indexed":false,"name":"minter","type":"address"},{"indexed":false,"name":"mintAmount","type":"uint256"},{"indexed":false,"name":"mintTokens","type":"uint256"}],"name":"Mint","type":"event","signature":"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f"},{"anonymous":false,"inputs":[{"indexed":false,"name":"redeemer","type":"address"},{"indexed":false,"name":"redeemAmount","type":"uint256"},{"indexed":false,"name":"redeemTokens","type":"uint256"}],"name":"Redeem","type":"event","signature":"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929"},{"anonymous":false,"inputs":[{"indexed":false,"name":"borrower","type":"address"},{"indexed":false,"name":"borrowAmount","type":"uint256"},{"indexed":false,"name":"accountBorrows","type":"uint256"},{"indexed":false,"name":"totalBorrows","type":"uint256"}],"name":"Borrow","type":"event","signature":"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80"},{"anonymous":false,"inputs":[{"indexed":false,"name":"payer","type":"address"},{"indexed":false,"name":"borrower","type":"address"},{"indexed":false,"name":"repayAmount","type":"uint256"},{"indexed":false,"name":"accountBorrows","type":"uint256"},{"indexed":false,"name":"totalBorrows","type":"uint256"}],"name":"RepayBorrow","type":"event","signature":"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1"},{"anonymous":false,"inputs":[{"indexed":false,"name":"liquidator","type":"address"},{"indexed":false,"name":"borrower","type":"address"},{"indexed":false,"name":"repayAmount","type":"uint256"},{"indexed":false,"name":"cTokenCollateral","type":"address"},{"indexed":false,"name":"seizeTokens","type":"uint256"}],"name":"LiquidateBorrow","type":"event","signature":"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52"},{"anonymous":false,"inputs":[{"indexed":false,"name":"oldPendingAdmin","type":"address"},{"indexed":false,"name":"newPendingAdmin","type":"address"}],"name":"NewPendingAdmin","type":"event","signature":"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9"},{"anonymous":false,"inputs":[{"indexed":false,"name":"oldAdmin","type":"address"},{"indexed":false,"name":"newAdmin","type":"address"}],"name":"NewAdmin","type":"event","signature":"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc"},{"anonymous":false,"inputs":[{"indexed":false,"name":"oldComptroller","type":"address"},{"indexed":false,"name":"newComptroller","type":"address"}],"name":"NewComptroller","type":"event","signature":"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d"},{"anonymous":false,"inputs":[{"indexed":false,"name":"oldInterestRateModel","type":"address"},{"indexed":false,"name":"newInterestRateModel","type":"address"}],"name":"NewMarketInterestRateModel","type":"event","signature":"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926"},{"anonymous":false,"inputs":[{"indexed":false,"name":"oldReserveFactorMantissa","type":"uint256"},{"indexed":false,"name":"newReserveFactorMantissa","type":"uint256"}],"name":"NewReserveFactor","type":"event","signature":"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460"},{"anonymous":false,"inputs":[{"indexed":false,"name":"admin","type":"address"},{"indexed":false,"name":"reduceAmount","type":"uint256"},{"indexed":false,"name":"newTotalReserves","type":"uint256"}],"name":"ReservesReduced","type":"event","signature":"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e"},{"anonymous":false,"inputs":[{"indexed":false,"name":"error","type":"uint256"},{"indexed":false,"name":"info","type":"uint256"},{"indexed":false,"name":"detail","type":"uint256"}],"name":"Failure","type":"event","signature":"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"amount","type":"uint256"}],"name":"Transfer","type":"event","signature":"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"amount","type":"uint256"}],"name":"Approval","type":"event","signature":"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"}]
        const cDaiContract = new web3.eth.Contract(cDaiAbiJson, cDaiContractAddress);
        
        // Rinkeby Contract for DAI token
        const daiContractAddress = '0x5592ec0cfb4dbc12d3ab100b257153436a1f0fea';
        const daiAbiJson = [{"inputs":[{"internalType":"uint256","name":"chainId_","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":true,"internalType":"address","name":"guy","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":true,"inputs":[{"indexed":true,"internalType":"bytes4","name":"sig","type":"bytes4"},{"indexed":true,"internalType":"address","name":"usr","type":"address"},{"indexed":true,"internalType":"bytes32","name":"arg1","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"arg2","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"LogNote","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"src","type":"address"},{"indexed":true,"internalType":"address","name":"dst","type":"address"},{"indexed":false,"internalType":"uint256","name":"wad","type":"uint256"}],"name":"Transfer","type":"event"},{"constant":true,"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"PERMIT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"usr","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"usr","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"burn","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"guy","type":"address"}],"name":"deny","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"usr","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"mint","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"src","type":"address"},{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"move","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"holder","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"bool","name":"allowed","type":"bool"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"usr","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"pull","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"usr","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"push","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"guy","type":"address"}],"name":"rely","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"src","type":"address"},{"internalType":"address","name":"dst","type":"address"},{"internalType":"uint256","name":"wad","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"wards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}];
        const daiContract = new web3.eth.Contract(daiAbiJson, daiContractAddress);

        var myWalletAddress;
        // cTokens
        var cEthBalance; 
        var cDaiBalance;
        // Supplied to compound (underlying)
        var suppliedEth;
        var suppliedDai;
        // Exchange rates
        var ethExchangeRate;
        var daiExchangeRate;
        // Supply rates
        var ethSupplyRate;
        var daiSupplyRate;
        var ethInterestPerBlock;
        var daiInterestPerBlock;
        

        web3.eth.getAccounts().then((accounts) => {
            console.log("[getAccounts] accounts: ", accounts)
            // show the first and last few digits
            var acct = accounts[0]
            walletButton.innerHTML += acct.substring(0, 7) + "..." + acct.substring(35);
            myWalletAddress = accounts[0]

            ////////////////// ETH //////////////////
            // Get the amount of eth in user's wallet
            web3.eth.getBalance(myWalletAddress).then((result) => {
                const ethBalance = web3.utils.fromWei(result);
                console.log('eth balance for wallet: ', ethBalance)
                walletBalanceEth.innerHTML = parseFloat(ethBalance).toFixed(4) + " ETH";
            }).catch((error) => {
                console.error('[wallet-balance] error: ', error);
            });

            // Get the amount of ETH supplied by the user
            cEthContract.methods.balanceOfUnderlying(myWalletAddress).call().then((balance) => {
                suppliedEth = web3.utils.fromWei(balance);

                console.log("getting amount of ETH supplied to Compound...")
                console.log("underlying eth: ", suppliedEth);
                underlyingEth.innerHTML = parseFloat(suppliedEth.toString()).toFixed(9);
            }).catch((error) => {
                console.error('[wallet-token-balance] error: ', error);
            });

            
            // Get the wallet's cETH balance
            cEthContract.methods.balanceOf(myWalletAddress).call()
            .then((result) => {
                cEthBalance = result / 1e8
                console.log("[wallet-ctoken-balance] obtained cToken balance");
                cTokensEth.innerHTML = cEthBalance;

            }).catch((error) => {
                console.error('[wallet-ctoken-balance] error: ', error);
            })

            ////////////////// DAI //////////////////
            // Get the amount of dai in user's wallet
            daiContract.methods.balanceOf(myWalletAddress).call().then((balance) => {
                // cDaiBalance = balance / 1e8;
                // console.log("dai balance in wallet: ", balance.toString());

                daiContract.methods.decimals().call().then((decimals) => {
                    balance = balance / (10**decimals);
                    console.log("dai balance in wallet: ", balance.toString());
                    walletBalanceDai.innerHTML = parseFloat(balance).toFixed(4) + " DAI"
                })
            })

            // Get the amount of DAI supplied by the user
            cDaiContract.methods.balanceOfUnderlying(myWalletAddress).call().then((balance) => {
                suppliedDai = web3.utils.fromWei(balance);
                console.log("underlying dai: ", suppliedDai);

                underlyingDai.innerHTML = parseFloat(suppliedDai.toString()).toFixed(9);
            }).catch((error) => {
                console.error('[wallet-dai-balance] error: ', error)
            })

            // Get the wallet's cDAI balance
            cDaiContract.methods.balanceOf(myWalletAddress).call()
            .then((result) => {
                cDaiBalance = result / 1e8;
                console.log("[wallet-cdai-balance] obtained cDai balance: ", cDaiBalance)
                cTokensDai.innerHTML = cDaiBalance;
            }).catch((error) => {
                console.error('[wallet-cdai-balance] error: ', error)
            })

        }).catch((error) => {
            console.error('[get accounts] error: ', error)
        });
    

        $.get('https://api.compound.finance/api/v2/ctoken?network=rinkeby', (data, status) => {
            ethExchangeRate = data.cToken[3].exchange_rate.value;
            ethSupplyRate = data.cToken[3].supply_rate.value;
            daiExchangeRate = data.cToken[2].exchange_rate.value;
            daiSupplyRate = data.cToken[2].supply_rate.value;

            console.log("exchange rate from API (eth): ", ethExchangeRate)
            console.log("exchange rate from API (dai): ", daiExchangeRate)
            
            console.log("supply interest rate from API (eth): ", ethSupplyRate)
            console.log("supply interest rate from API (dai): ", daiSupplyRate)

            exchangeRateEth.innerHTML += "1 cETH = " + parseFloat(ethExchangeRate).toFixed(6) + " ETH";
            exchangeRateDai.innerHTML += "1 cDAI = " + parseFloat(daiExchangeRate).toFixed(6) + " DAI";
        })


        // Interest being earned
        // Supply rate: the amount of ETH, per block, that is added to each of your supplied ETH. 
        // This is calculated using the prevailing interest rate for this cToken.
        // Each supplied ETH will increase by ${interestPerEthThisBlock} based on the current interest rate
        cEthContract.methods.supplyRatePerBlock().call().then((supplyRatePerBlock) => { 
            // const interestPerEthThisBlock = supplyRatePerBlock / 1e18
            ethInterestPerBlock = supplyRatePerBlock / 1e18;
            console.log("each supplied ETH will increase by " + ethInterestPerBlock + " per Ethereum block (every ~15 seconds) based on the current interest rate")

        }).catch((error) => {
            console.error('[supply-rate] error: ', error);
        })
        
        cDaiContract.methods.supplyRatePerBlock().call().then((supplyRatePerBlock) => { 
            daiInterestPerBlock = supplyRatePerBlock / 1e18
            console.log("each supplied DAI will increase by " + daiInterestPerBlock + " per Ethereum block (every ~15 seconds) based on the current interest rate")

        }).catch((error) => {
            console.error('[supply-rate] error: ', error);
        })


        // var supplyButton = document.getElementById('supplyBtn');
        var supplyForm = document.getElementById('supplyForm');

        supplyForm.onsubmit = function(event){
            var tokenType = $('#token-select').val();
            console.log("supply button clicked! token selected: ", tokenType);
            event.preventDefault()
            
            const amount = document.getElementById('amountToSupply').value;
            $('#spinner').show();
            $('#statusMessage').append(`<span>Supplying ` + amount + ` ` + tokenType + `...</span>`)

            if (tokenType == "eth") {
                // Mint some cETH by supplying ETH to the compound protocol

                cEthContract.methods.mint().send({
                    from: myWalletAddress,
                    gasLimit: web3.utils.toHex(500000),
                    gasPrice: web3.utils.toHex(20000000000),
                    value: web3.utils.toHex(web3.utils.toWei(amount, 'ether'))
                }).then((result) => {
                    console.log("supplied! result: ", result)
                    $('#spinner').hide();
                    statusMessage.innerHTML = `ðŸ’° Supplied! Transaction hash: ` +  `<a target="_blank" href="https://rinkeby.etherscan.io/tx/` + result.transactionHash + `"><span class="gold-text"><b>Transaction Receipt<b></span></a>`
                }).catch((error) => {
                    console.error('[supply] error:', error);
                    $('#spinner').hide();
                    statusMessage.innerHTML = `ðŸš¨ Something went wrong. Please try again.`
                });
            } else if (tokenType == "dai") {
                console.log("supplying some dai...");
                const daiToSupply = amount * 1e18
                daiContract.methods.approve(cDaiContractAddress, web3.utils.toBN(daiToSupply)).send({
                    from: myWalletAddress,
                    gasLimit: web3.utils.toHex(500000),
                    gasPrice: web3.utils.toHex(20000000000)
                }).then((result) => {
                    console.log("DAI contract Approve operation successful. Minting some DAI");
                    cDaiContract.methods.mint(web3.utils.toBN(daiToSupply)).send({
                        from: myWalletAddress,
                        gasLimit: web3.utils.toHex(600000),
                        gasPrice: web3.utils.toHex(20000000000),
                    }).then((result) => {
                        console.log('cDAI "Mint" operation successful: ', result);
                        $('#spinner').hide();
                        statusMessage.innerHTML = `ðŸ’° Supplied! Transaction hash: ` +  `<a target="_blank" href="https://rinkeby.etherscan.io/tx/` + result.transactionHash + `"><span class="gold-text"><b>Transaction Receipt<b></span></a>`
                    });
                })
            }
        }

        // Supply/redeem dropdown
        $('#token-select').on('change', event => {
            console.log("selection detected");
            var tokenType = $('#token-select').val();
            if (tokenType == 'eth') {
                // supply interest rate
                $('#supplyRateInfo').empty();
                $('#supplyRateInfo').append(`<p class="small">Each supplied ETH will increase by <b><span class="gold-text">` + ethInterestPerBlock + `</span></b> per Ethereum block (every ~15 seconds) based on the current interest rate of <span class="gold-text">` + parseFloat(ethSupplyRate).toFixed(12) + `</span></p>`);
                // available to redeem
                $('#cTokensAvailable').empty();
                $('#cTokensAvailable').append(`<p>cETH available: ` + cEthBalance + `</p>`)
                
            } else if (tokenType == 'dai') {
                // supply interest rate
                $('#supplyRateInfo').empty();
                $('#supplyRateInfo').append(`<p class="small">Each supplied DAI will increase by <b><span class="gold-text">` + daiInterestPerBlock + `</span></b> per Ethereum block (every ~15 seconds) based on the current interest rate of <span class="gold-text">` + parseFloat(daiSupplyRate).toFixed(12) + `</span></p>`);
                // available to redeem
                $('#cTokensAvailable').empty();
                $('#cTokensAvailable').append(`<p>cDAI available: ` + cDaiBalance + `</p>`)
            }
        });

        // Redeem cTokens
        $('#amountToRedeem').on('input', (event) => {
            console.log("input received");
            var tokenType = $('#token-select').val();
            var input = $('#amountToRedeem').val();

            if (tokenType == 'eth') {
                cTokenToEth.innerHTML = input * ethExchangeRate + " ETH";
            } else if (tokenType == 'dai') {
                cTokenToDai.innerHTML = input * daiExchangeRate + " DAI";
            }
        });

        var redeemForm = document.getElementById('redeemForm');
        redeemForm.onsubmit = function(event){
            console.log("redeem button clicked!");
            var tokenType = $('#token-select').val();
            console.log("supply button clicked! token selected: ", tokenType);
            event.preventDefault();

            console.log("Exchanging all cToken based on underlying token (ETH or DAI) amount...");
            

            var amount = $('#amountToRedeem').val();

            $('#spinner').show();
            $('#statusMessage').append("<span>Redeeming " + amount + " c" + tokenType +  " for " + tokenType + "...</span>");

            if (tokenType == 'eth') {
                cEthContract.methods.redeem(Math.floor(amount * 1e8)).send({
                    from: myWalletAddress,
                    gasLimit: web3.utils.toHex(500000),
                gasPrice: web3.utils.toHex(20000000000),
                }).then((result) => {
                    console.log("result from redeeming: ", result)
                    $('#spinner').hide();
                    statusMessage.innerHTML = `ðŸ’¸ Redeemed ETH from cETH! Transaction hash: ` +  `<a target="_blank" href="https://rinkeby.etherscan.io/tx/` + result.transactionHash + `"><span class="gold-text"><b>Transaction Receipt<b></span></a>`
                }).catch((error) => {
                    console.error('[redeem] error: ', error);
                    $('#spinner').hide();
                    statusMessage.innerHTML = `ðŸš¨ Something went wrong. Please try again.`
                });
            } else if (tokenType == 'dai') {
                const daiToRedeem = amount * 1e8
                cDaiContract.methods.redeem(daiToRedeem).send({
                    from: myWalletAddress,
                    gasLimit: web3.utils.toHex(500000),
                    gasPrice: web3.utils.toHex(20000000000),
                }).then((result) => {
                    console.log("result from redeeming cDAI: ", result);
                    $('#spinner').hide();
                    statusMessage.innerHTML = `ðŸ’¸ Redeemed DAI from cDAI! Transaction hash: ` +  `<a target="_blank" href="https://rinkeby.etherscan.io/tx/` + result.transactionHash + `"><span class="gold-text"><b>Transaction Receipt<b></span></a>`
                }).catch((error) => {
                    console.error('[redeem] error: ', error);
                    $('#spinner').hide();
                    statusMessage.innerHTML = `ðŸš¨ Something went wrong. Please try again.`
                });
            }
        }


        // Dynamically update balances
        // If 15 secs = 1 block -> 3 secs = 1/5 block ðŸ˜…
        setInterval(updateBalance, 3000);

        function updateBalance() {
            // TODO: update to directly refresh from AccountService API's supply_balance_underlying
            console.log("updating...")
            suppliedEth *= (1 + ethInterestPerBlock / 5);
            suppliedDai *= (1 + daiInterestPerBlock / 5);
            underlyingEth.innerHTML = suppliedEth.toFixed(9);
            underlyingDai.innerHTML = suppliedDai.toFixed(9);
        }

        // Open portis wallet
        $('#walletButton').click(() => {
            portis.showPortis();
        })

        $('#open-wyre').click(() => {            
            // read in the form fields
            var amount = $('#amountToFund').val();
            var tokenType = $('#tokenToBuy').val();
            // console.log("open wyre button clicked! amount: " + amount + " token type: " + tokenType);

            // construct the wyre url, and open in new tab
            var wyreUrl = 'https://pay.testwyre.com/purchase?dest=ethereum%3A' + myWalletAddress + '&destCurrency=' + tokenType + '&sourceAmount=' + amount + '&paymentMethod=debit-card';
            window.open(wyreUrl, '_blank');
            $('#wyreModal').modal('toggle');
        })

        $('#tokenToBuy').change(() => {
            var selectedToken = $('#tokenToBuy').val();
            // if dai, show the currency converter
            if (selectedToken == 'dai') {
                $('#currencyConverter').show();
            } else {
                $('#currencyConverter').hide();
            }
        })
        
    </script>

<%- include('partials/footer') %>

</body>
</html>